Since 2008, Casual Arena's team has been developing Flash game browsers. In the past year, they have specialized in cross-platform mobile and tablet game development by studying various technologies and focusing on Cocos 2D and Unity 3D. This article compares and contrasts the two environments, highlighting and explaining their respective differences. The creation of 2D platform games The majority of mobile and tablet game developers want their games to be compatible with multiple platforms, or at least iOS and Android. Developing two or more parallel applications using native code (Objective-C for iOS and Java for Android) is always possible, but not advised. Using a development environment that allows you to target multiple platforms from a single instance of game development is the most efficient option. Herein arises the initial important question: what technology do I employ? The user has access to numerous frameworks and technologies, including Unity3D, Cocos2D, Marmalade SDK, and Adobe Flash, among others. Adobe Flash is used almost exclusively when an application is already developed in Flash for browser use and a quick migration to mobile is desired. If your application requires more processing power (e.g. pool games, games with heavy graphics or animations, etc.), Flash becomes untenable. Cocos2D is a comprehensive, open source, and free framework. This is the primary reason why it has become the most popular development platform, surpassing Marmalade and Unity, which are not free. Unity3D has been and continues to be the most popular development platform for creating 3D video games. Cocos and Unity are currently the only two options for developing 2D games, as new versions of Unity include 2D game-specific functionality. We recommend selecting one of these two platforms for 2D game development based on our experience. The question of whether Unity or Cocos is the superior game development platform still stands. There are numerous comparisons between these two platforms on the Internet. When we began the development of our games, we reviewed all available data and information and based our decisions on them. The issue with these comparisons is that almost all of them were subjective. Cocos was being defended by Cocos-specialized programmers. Those who employed Unity supported Unity. On both platforms, there are comparatively few expert game developers. We have researched and developed for both platforms, and have come to the conclusion that Unity is the superior platform. Actually, a more accurate response would be: "If you can afford Unity, use it; if not, Cocos is a good alternative." Unity3D is a significantly more advanced technology than Cocos2D, while Cocos2D is free and open source. Examine the distinctions between them. When discussing Cocos2D (or simply Cocos), we always refer to Cocos2D-x, the platform Cocos2D extension (initially oriented for iPhone). Advantages of Cocos2D versus Unity3D Cocos2D is free, open source, and more current than its competitor. However, unity is expensive. The free license is inadequate for professional game developers. The license fee is between $1,500 and $4,500 per person (plus tax), which presents a significant barrier to entry for new developers. Cocos2D employs the C++ programming language and lightweight libraries, making it more straightforward than Unity. You can view the entire Cocos2D source code, edit it, and modify it to suit your needs. Cocos2D is the best option if you are an expert in C ++ and do not wish to purchase expensive licenses for Unity. Compared to Unity, it has fewer advantages despite possessing a number of favorable characteristics. It has excellent physical engines, a large number of examples for each and every Cocos2D feature, and a large community of game developers who support and enhance the framework daily, etc. However, all of this is accomplished by Unity as well. Advantages of Unity3D versus Cocos2D Everything else. Naturally, we only ever discuss 2D, as Coco does not support 3D software. Design Environment Cocos2D has no integrated design environment. Programming, loading images, and positioning them with C++ should be used to create screens and interfaces. You can, however, use external graphics editors such as Cocos Studio (also free) to position elements on the screen and configure specific objects. However, this editor is significantly less powerful than Unity's. Integral to the Unity platform is the Unity editor. Cocos Studio, on the other hand, is not, and its operation is based on an XML file, as well as the generation of a series of images from the file.